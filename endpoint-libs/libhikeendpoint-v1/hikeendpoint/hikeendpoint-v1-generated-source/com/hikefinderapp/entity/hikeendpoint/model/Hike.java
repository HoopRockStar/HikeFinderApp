/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-07-22 21:53:01 UTC)
 * on 2014-08-28 at 23:01:59 UTC 
 * Modify at your own risk.
 */

package com.hikefinderapp.entity.hikeendpoint.model;

/**
 * Model definition for Hike.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the hikeendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Hike extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String address;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean bathroomAvailable;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean completed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double distance;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean dogsAllowed;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer elevation;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean freeParking;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean geological;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean historical;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean lakeRiverCreek;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double latitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double longitude;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean loop;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String name;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean noBikes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean noSteepHills;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String notes;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean oceanView;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double rating;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String review;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer score;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean tallTrees;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String trails;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean waterfall;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean wildflowers;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getAddress() {
    return address;
  }

  /**
   * @param address address or {@code null} for none
   */
  public Hike setAddress(java.lang.String address) {
    this.address = address;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getBathroomAvailable() {
    return bathroomAvailable;
  }

  /**
   * @param bathroomAvailable bathroomAvailable or {@code null} for none
   */
  public Hike setBathroomAvailable(java.lang.Boolean bathroomAvailable) {
    this.bathroomAvailable = bathroomAvailable;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getCompleted() {
    return completed;
  }

  /**
   * @param completed completed or {@code null} for none
   */
  public Hike setCompleted(java.lang.Boolean completed) {
    this.completed = completed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public Hike setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getDistance() {
    return distance;
  }

  /**
   * @param distance distance or {@code null} for none
   */
  public Hike setDistance(java.lang.Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getDogsAllowed() {
    return dogsAllowed;
  }

  /**
   * @param dogsAllowed dogsAllowed or {@code null} for none
   */
  public Hike setDogsAllowed(java.lang.Boolean dogsAllowed) {
    this.dogsAllowed = dogsAllowed;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getElevation() {
    return elevation;
  }

  /**
   * @param elevation elevation or {@code null} for none
   */
  public Hike setElevation(java.lang.Integer elevation) {
    this.elevation = elevation;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getFreeParking() {
    return freeParking;
  }

  /**
   * @param freeParking freeParking or {@code null} for none
   */
  public Hike setFreeParking(java.lang.Boolean freeParking) {
    this.freeParking = freeParking;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGeological() {
    return geological;
  }

  /**
   * @param geological geological or {@code null} for none
   */
  public Hike setGeological(java.lang.Boolean geological) {
    this.geological = geological;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getHistorical() {
    return historical;
  }

  /**
   * @param historical historical or {@code null} for none
   */
  public Hike setHistorical(java.lang.Boolean historical) {
    this.historical = historical;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Hike setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLakeRiverCreek() {
    return lakeRiverCreek;
  }

  /**
   * @param lakeRiverCreek lakeRiverCreek or {@code null} for none
   */
  public Hike setLakeRiverCreek(java.lang.Boolean lakeRiverCreek) {
    this.lakeRiverCreek = lakeRiverCreek;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getLatitude() {
    return latitude;
  }

  /**
   * @param latitude latitude or {@code null} for none
   */
  public Hike setLatitude(java.lang.Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getLongitude() {
    return longitude;
  }

  /**
   * @param longitude longitude or {@code null} for none
   */
  public Hike setLongitude(java.lang.Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getLoop() {
    return loop;
  }

  /**
   * @param loop loop or {@code null} for none
   */
  public Hike setLoop(java.lang.Boolean loop) {
    this.loop = loop;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * @param name name or {@code null} for none
   */
  public Hike setName(java.lang.String name) {
    this.name = name;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNoBikes() {
    return noBikes;
  }

  /**
   * @param noBikes noBikes or {@code null} for none
   */
  public Hike setNoBikes(java.lang.Boolean noBikes) {
    this.noBikes = noBikes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getNoSteepHills() {
    return noSteepHills;
  }

  /**
   * @param noSteepHills noSteepHills or {@code null} for none
   */
  public Hike setNoSteepHills(java.lang.Boolean noSteepHills) {
    this.noSteepHills = noSteepHills;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getNotes() {
    return notes;
  }

  /**
   * @param notes notes or {@code null} for none
   */
  public Hike setNotes(java.lang.String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getOceanView() {
    return oceanView;
  }

  /**
   * @param oceanView oceanView or {@code null} for none
   */
  public Hike setOceanView(java.lang.Boolean oceanView) {
    this.oceanView = oceanView;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getRating() {
    return rating;
  }

  /**
   * @param rating rating or {@code null} for none
   */
  public Hike setRating(java.lang.Double rating) {
    this.rating = rating;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getReview() {
    return review;
  }

  /**
   * @param review review or {@code null} for none
   */
  public Hike setReview(java.lang.String review) {
    this.review = review;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getScore() {
    return score;
  }

  /**
   * @param score score or {@code null} for none
   */
  public Hike setScore(java.lang.Integer score) {
    this.score = score;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getTallTrees() {
    return tallTrees;
  }

  /**
   * @param tallTrees tallTrees or {@code null} for none
   */
  public Hike setTallTrees(java.lang.Boolean tallTrees) {
    this.tallTrees = tallTrees;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getTrails() {
    return trails;
  }

  /**
   * @param trails trails or {@code null} for none
   */
  public Hike setTrails(java.lang.String trails) {
    this.trails = trails;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWaterfall() {
    return waterfall;
  }

  /**
   * @param waterfall waterfall or {@code null} for none
   */
  public Hike setWaterfall(java.lang.Boolean waterfall) {
    this.waterfall = waterfall;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getWildflowers() {
    return wildflowers;
  }

  /**
   * @param wildflowers wildflowers or {@code null} for none
   */
  public Hike setWildflowers(java.lang.Boolean wildflowers) {
    this.wildflowers = wildflowers;
    return this;
  }

  @Override
  public Hike set(String fieldName, Object value) {
    return (Hike) super.set(fieldName, value);
  }

  @Override
  public Hike clone() {
    return (Hike) super.clone();
  }

}
